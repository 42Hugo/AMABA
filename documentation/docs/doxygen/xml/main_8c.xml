<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/resource.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">sched.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/select.h</includes>
    <includes local="yes">ecrt.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c</label>
        <link refid="main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>arpa/inet.h</label>
      </node>
      <node id="17">
        <label>ecrt.h</label>
      </node>
      <node id="2">
        <label>errno.h</label>
      </node>
      <node id="15">
        <label>fcntl.h</label>
      </node>
      <node id="12">
        <label>sched.h</label>
      </node>
      <node id="3">
        <label>signal.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="11">
        <label>sys/mman.h</label>
      </node>
      <node id="6">
        <label>sys/resource.h</label>
      </node>
      <node id="16">
        <label>sys/select.h</label>
      </node>
      <node id="7">
        <label>sys/time.h</label>
      </node>
      <node id="8">
        <label>sys/types.h</label>
      </node>
      <node id="10">
        <label>time.h</label>
      </node>
      <node id="9">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="main_8c_1ab495f8313ac709722de636c17e8a7381" prot="public" static="no">
        <name>PERIOD_NS</name>
        <initializer>(1000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Task period in ns. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="52" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a879e10cc3ad4709ecca7d0b56c93c1f0" prot="public" static="no">
        <name>MAX_SAFE_STACK</name>
        <initializer>(8 * 1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum stack size which is guranteed safe to access without faulting </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="55" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a0501e82515b2bdf36453c4cc80f5e0cc" prot="public" static="no">
        <name>NSEC_PER_SEC</name>
        <initializer>(1000000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>predefined in the etherlabmaster <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="60" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a84142cd3e3bf14c4ecd4b6707a808c39" prot="public" static="no">
        <name>FREQUENCY</name>
        <initializer>(NSEC_PER_SEC / PERIOD_NS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frequenct, predefined in the etherlabmaster <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="63" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a614217d263be1fb1a5f76e2ff7be19a2" prot="public" static="no">
        <name>PORT</name>
        <initializer>12345</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>socket var to comunicate with pneumatic_control.py </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="66" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a6b20d41d6252e9871430c242cb1a56e7" prot="public" static="no">
        <name>BUFFER_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="67" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ae3d33e662cb3c0b29417feacef09d410" prot="public" static="no">
        <name>BusCouplerPos</name>
        <initializer>0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="90" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aaebe9df0a73a67784d15515ce9efd704" prot="public" static="no">
        <name>DigOutSlavePos</name>
        <initializer>0, 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="91" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aef7856fd4bb83562fbee505413f4924b" prot="public" static="no">
        <name>AnaOutSlavePos</name>
        <initializer>0, 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="92" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aa5b685a0e8abaaeab58d042d15277b4a" prot="public" static="no">
        <name>AnaInSlavePos</name>
        <initializer>0, 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="93" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a55b0969981b7e06481f0931da2d6ba0a" prot="public" static="no">
        <name>Beckhoff_EK1100</name>
        <initializer>0x00000002, 0x044c2c52</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="95" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a09001e87b475f1f826b3538050e9e5fa" prot="public" static="no">
        <name>Beckhoff_EL2024</name>
        <initializer>0x00000002, 0x07e83052</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="96" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aee5d4f6b46a33bcc38d0b2e63fe7d17d" prot="public" static="no">
        <name>Beckhoff_EL4104</name>
        <initializer>0x00000002, 0x10083052</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="97" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a28e6db2e1542197811385e140ec598d4" prot="public" static="no">
        <name>Beckhoff_EL3164</name>
        <initializer>0x00000002, 0x0c5c3052</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="98" column="9" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="98" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="main_8c_1a6cf4711aa7ecd548b03b6e50d44b5aa6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int server_fd</definition>
        <argsstring></argsstring>
        <name>server_fd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="69" column="5" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ae4f1c36e2c0e305e54a0de1d107bf9ef" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int client_fd</definition>
        <argsstring></argsstring>
        <name>client_fd</name>
        <initializer>=-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="69" column="15" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a367491879e8ce396250c54956bc6ed5e" prot="public" static="no" mutable="no">
        <type>struct sockaddr_in</type>
        <definition>struct sockaddr_in address</definition>
        <argsstring></argsstring>
        <name>address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="70" column="18" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a831741adfdfd6d071a62a5bc72ea1aeb" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int addrlen</definition>
        <argsstring></argsstring>
        <name>addrlen</name>
        <initializer>= sizeof(address)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="71" column="5" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1af00b615ca097c43dbb02ae3a00ea3a62" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char buffer[BUFFER_SIZE]</definition>
        <argsstring>[BUFFER_SIZE]</argsstring>
        <name>buffer</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="72" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ab4ddbacd5d1165db726810362f1c671b" prot="public" static="yes" mutable="no">
        <type>ec_master_t *</type>
        <definition>ec_master_t* master</definition>
        <argsstring></argsstring>
        <name>master</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="76" column="20" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1aa38d242655399730d9773a2ecc883384" prot="public" static="yes" mutable="no">
        <type>ec_master_state_t</type>
        <definition>ec_master_state_t master_state</definition>
        <argsstring></argsstring>
        <name>master_state</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="77" column="26" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a3acdce57798d159f2dc3c42f0c62de43" prot="public" static="yes" mutable="no">
        <type>ec_domain_t *</type>
        <definition>ec_domain_t* domain1</definition>
        <argsstring></argsstring>
        <name>domain1</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="79" column="20" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a4042cc006af2c75afc711ed0b4c5b957" prot="public" static="yes" mutable="no">
        <type>ec_domain_state_t</type>
        <definition>ec_domain_state_t domain1_state</definition>
        <argsstring></argsstring>
        <name>domain1_state</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="80" column="26" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a3bf952b8eb22b5d2316c915dc3ff3d42" prot="public" static="yes" mutable="no">
        <type>ec_slave_config_t *</type>
        <definition>ec_slave_config_t* sc_ana_in</definition>
        <argsstring></argsstring>
        <name>sc_ana_in</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="82" column="26" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ab2a8eafd484ae9e0ccc7bea00d585053" prot="public" static="yes" mutable="no">
        <type>ec_slave_config_state_t</type>
        <definition>ec_slave_config_state_t sc_ana_in_state</definition>
        <argsstring></argsstring>
        <name>sc_ana_in_state</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="83" column="32" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a2089f25b7071e667a9b6d9e5651824df" prot="public" static="yes" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* domain1_pd</definition>
        <argsstring></argsstring>
        <name>domain1_pd</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="88" column="16" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a80f63bd83b9184600c99ccc04c95d9c0" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int off_ana_in1</definition>
        <argsstring></argsstring>
        <name>off_ana_in1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="102" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ad1d1d3994a7e278db62bd31a87a12b74" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int off_ana_in2</definition>
        <argsstring></argsstring>
        <name>off_ana_in2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="103" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1aa7dba8693fdd2b56c0c3b70a4a94a131" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int off_ana_out1</definition>
        <argsstring></argsstring>
        <name>off_ana_out1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="104" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a41c67a543287047a3627aac708995789" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int off_ana_out2</definition>
        <argsstring></argsstring>
        <name>off_ana_out2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="105" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ac0ba79ab8279b134de5653a1dad83dd6" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int off_dig_out1</definition>
        <argsstring></argsstring>
        <name>off_dig_out1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="106" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a3cbec18dc8215461b4a6ef72b8930410" prot="public" static="yes" mutable="no">
        <type>const ec_pdo_entry_reg_t</type>
        <definition>const ec_pdo_entry_reg_t domain1_regs[]</definition>
        <argsstring>[]</argsstring>
        <name>domain1_regs</name>
        <initializer>= {
    {AnaInSlavePos,  Beckhoff_EL3164, 0x6000, 0x11, &amp;off_ana_in1},
    {AnaInSlavePos,  Beckhoff_EL3164, 0x6010, 0x11, &amp;off_ana_in2},
    {AnaOutSlavePos, Beckhoff_EL4104, 0x7000, 0x01, &amp;off_ana_out1},
    {AnaOutSlavePos, Beckhoff_EL4104, 0x7010, 0x01, &amp;off_ana_out2},
    {DigOutSlavePos, Beckhoff_EL2024, 0x7000, 0x01, &amp;off_dig_out1},
    {}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="109" column="33" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="109" bodyend="116"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ac6c464b0a83a481fee26175f6229c5cc" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int counter</definition>
        <argsstring></argsstring>
        <name>counter</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="122" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a5a6d1eef775b071cbbdf69eb35f8072d" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int blink</definition>
        <argsstring></argsstring>
        <name>blink</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="123" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ac7542f1b8fef417f5bf90c19c9bc128a" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int dig1</definition>
        <argsstring></argsstring>
        <name>dig1</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="124" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a0c0abe34331c226d8894c70c1c03248f" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int dig2</definition>
        <argsstring></argsstring>
        <name>dig2</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="125" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1af1408a0a4e97a21a516eb0b267e302df" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int dig3</definition>
        <argsstring></argsstring>
        <name>dig3</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="126" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a546d0f0e30fc92d87df5a7dbc3978a2c" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float ana1</definition>
        <argsstring></argsstring>
        <name>ana1</name>
        <initializer>=0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="127" column="14" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a1baa763260c620a4d4cab10d30d271f6" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float ana2</definition>
        <argsstring></argsstring>
        <name>ana2</name>
        <initializer>=0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="128" column="14" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a3cc20059a5b78ca1c8660e2c8134079c" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="129" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ac4948d3f194cb02e216c672e03cf9eb6" prot="public" static="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int loop</definition>
        <argsstring></argsstring>
        <name>loop</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="130" column="21" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1ae1b4a2a0bd124fb2ee430c8ba7e3a071" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char message[]</definition>
        <argsstring>[]</argsstring>
        <name>message</name>
        <initializer>=&quot;10000000&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="131" column="13" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1af98b5471765d5376fa34772af61e5308" prot="public" static="yes" mutable="no">
        <type>ec_pdo_entry_info_t</type>
        <definition>ec_pdo_entry_info_t slave_3_pdo_entries[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_3_pdo_entries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="137" column="28" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="137" bodyend="182"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a2f5f114ea13f6bed3473f2d549819bab" prot="public" static="yes" mutable="no">
        <type>ec_pdo_info_t</type>
        <definition>ec_pdo_info_t slave_3_pdos[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_3_pdos</name>
        <initializer>= {
    {0x1a00, 11, slave_3_pdo_entries + 0}, 
    {0x1a02, 11, slave_3_pdo_entries + 11}, 
    {0x1a04, 11, slave_3_pdo_entries + 22}, 
    {0x1a06, 11, slave_3_pdo_entries + 33}, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="184" column="22" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a3ee5b2fbb1c1cb78418fbbaa5f19a931" prot="public" static="yes" mutable="no">
        <type>ec_sync_info_t</type>
        <definition>ec_sync_info_t slave_3_syncs[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_3_syncs</name>
        <initializer>= {
    {0, EC_DIR_OUTPUT, 0, NULL, EC_WD_DISABLE},
    {1, EC_DIR_INPUT, 0, NULL, EC_WD_DISABLE},
    {2, EC_DIR_OUTPUT, 0, NULL, EC_WD_DISABLE},
    {3, EC_DIR_INPUT, 4, slave_3_pdos + 0, EC_WD_DISABLE},
    {0xff}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="191" column="23" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="191" bodyend="197"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a89d440d9cfec16b0dd4746a9218ad8ce" prot="public" static="yes" mutable="no">
        <type>ec_pdo_entry_info_t</type>
        <definition>ec_pdo_entry_info_t slave_2_pdo_entries[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_2_pdo_entries</name>
        <initializer>= {
    {0x7000, 0x01, 16}, 
    {0x7010, 0x01, 16}, 
    {0x7020, 0x01, 16}, 
    {0x7030, 0x01, 16}, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="201" column="28" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a8860ceb7345027e1f2ab4cd3a07f7fcd" prot="public" static="yes" mutable="no">
        <type>ec_pdo_info_t</type>
        <definition>ec_pdo_info_t slave_2_pdos[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_2_pdos</name>
        <initializer>= {
    {0x1600, 1, slave_2_pdo_entries + 0}, 
    {0x1601, 1, slave_2_pdo_entries + 1}, 
    {0x1602, 1, slave_2_pdo_entries + 2}, 
    {0x1603, 1, slave_2_pdo_entries + 3}, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="208" column="22" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1acf785e4a3304e64ddc19e11ab1e59131" prot="public" static="yes" mutable="no">
        <type>ec_sync_info_t</type>
        <definition>ec_sync_info_t slave_2_syncs[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_2_syncs</name>
        <initializer>= {
    {0, EC_DIR_OUTPUT, 0, NULL, EC_WD_DISABLE},
    {1, EC_DIR_INPUT, 0, NULL, EC_WD_DISABLE},
    {2, EC_DIR_OUTPUT, 4, slave_2_pdos + 0, EC_WD_DISABLE},
    {3, EC_DIR_INPUT, 0, NULL, EC_WD_DISABLE},
    {0xff}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="215" column="23" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="215" bodyend="221"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a9a73bf36dd24b0bd5d08b65298530083" prot="public" static="yes" mutable="no">
        <type>ec_pdo_entry_info_t</type>
        <definition>ec_pdo_entry_info_t slave_1_pdo_entries[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_1_pdo_entries</name>
        <initializer>= {
    {0x7000, 0x01, 1}, 
    {0x7010, 0x01, 1}, 
    {0x7020, 0x01, 1}, 
    {0x7030, 0x01, 1}, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="225" column="28" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="225" bodyend="230"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a33e4003dc528a7eee5b165ceb506409e" prot="public" static="yes" mutable="no">
        <type>ec_pdo_info_t</type>
        <definition>ec_pdo_info_t slave_1_pdos[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_1_pdos</name>
        <initializer>= {
    {0x1600, 1, slave_1_pdo_entries + 0}, 
    {0x1601, 1, slave_1_pdo_entries + 1}, 
    {0x1602, 1, slave_1_pdo_entries + 2}, 
    {0x1603, 1, slave_1_pdo_entries + 3}, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="232" column="22" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a4a650ff6f50561b4c07dbd7b36a66307" prot="public" static="yes" mutable="no">
        <type>ec_sync_info_t</type>
        <definition>ec_sync_info_t slave_1_syncs[]</definition>
        <argsstring>[]</argsstring>
        <name>slave_1_syncs</name>
        <initializer>= {
    {0, EC_DIR_OUTPUT, 4, slave_1_pdos + 0, EC_WD_ENABLE},
    {0xff}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="239" column="23" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="239" bodyend="242"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="main_8c_1a0eaa201daf4e2c7a8087a4639620028a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decodeMessage</definition>
        <argsstring>(const char *mes)</argsstring>
        <name>decodeMessage</name>
        <param>
          <type>const char *</type>
          <declname>mes</declname>
        </param>
        <briefdescription>
<para>Decodes the message sent by pneumatic_control.py and updates the global variables accordingly. </para>
        </briefdescription>
        <detaileddescription>
<para>The maximum value that can be set to the analog output is 32767. Values above this will be set to 0 for the VPPM 0-2 bar. (The 0-6 bar wasn&apos;t tested at maximum, but it is most likely the same).</para>
<para><bold>VPPM 0-6 bar (with an output of 0-2 bar needed):</bold><itemizedlist>
<listitem><para>The pressure output is linear above 0.1 bar.</para>
</listitem><listitem><para>Set ana1 to 2100 to get 0.1 bar.</para>
</listitem><listitem><para>Set ana1 to 12287 to get 2 bar.</para>
</listitem><listitem><para>Formula: <computeroutput>ana1 = A * ana1 + B</computeroutput><itemizedlist>
<listitem><para><computeroutput>A = (outmax - outmin) / (inmax - inmin) = (12287 - 2100) / (2 - 0.1) = 5361.58</computeroutput></para>
</listitem><listitem><para><computeroutput>B = outmin - A * inmin = 2100 - 5361.58 * 0.1 = 1536.84</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><bold>VPPM 0-2 bar (with an output of 0-2 bar needed):</bold><itemizedlist>
<listitem><para>The pressure output is linear above 0.1 bar.</para>
</listitem><listitem><para>Set ana2 to 6553 to get 0.1 bar.</para>
</listitem><listitem><para>Set ana2 to 37685 to get 2 bar (unfortunately, the maximum value is 32767, so the maximum is now 1.7 bar).</para>
</listitem><listitem><para>Formula: <computeroutput>ana2 = A * ana2 + B</computeroutput><itemizedlist>
<listitem><para><computeroutput>A = (outmax - outmin) / (inmax - inmin) = (37685 - 6553) / (1.7 - 0.1) = 16383.75</computeroutput></para>
</listitem><listitem><para><computeroutput>B = outmin - A * inmin = 6553 - 16383.75 * 0.1 = 4914.625</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mes</parametername>
</parameternamelist>
<parameterdescription>
<para>The message sent by pneumatic_control.py as a string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="270" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="270" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1afad9eb7393cb103c5d29a738485b82b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_nonblocking</definition>
        <argsstring>(int fd)</argsstring>
        <name>set_nonblocking</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Set the nonblocking object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>The file descriptor to set to nonblocking </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="306" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="306" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a0c79d602b634887e72469a1e97caf122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void start_socket</definition>
        <argsstring>()</argsstring>
        <name>start_socket</name>
        <briefdescription>
<para>start the comunicaion with pneumatic_control.py using a socket and tries to connect </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="322" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="322" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a5444cae5002b72381f50851c5a971369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void close_socket</definition>
        <argsstring>()</argsstring>
        <name>close_socket</name>
        <briefdescription>
<para>close the socket before exiting the program </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="365" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="365" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a0b3b006a9de0dace8aa7561d1de3e54b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void listen_to_socket</definition>
        <argsstring>()</argsstring>
        <name>listen_to_socket</name>
        <briefdescription>
<para>listen to the socket and read the message sent by pneumatic_control.py and if connection wasn&apos;t established tries to connect </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="376" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="376" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a54789270dccb8eccbd08aec04200a446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_domain1_state</definition>
        <argsstring>(void)</argsstring>
        <name>check_domain1_state</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>standard cyclic task to check the state of the domain and the master </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="429" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="429" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a17736068bd6664404ad732ff7809a79a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_master_state</definition>
        <argsstring>(void)</argsstring>
        <name>check_master_state</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>standard cyclic task to check the state of the master </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="443" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="443" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ab5271f1067ae861b511a11d1163c83dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_slave_config_states</definition>
        <argsstring>(void)</argsstring>
        <name>check_slave_config_states</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>standard cyclic task to check the state of the slave configuration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="458" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="458" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1acd382bcdfc8b54fa10de12eb43a84d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cyclic_task</definition>
        <argsstring>()</argsstring>
        <name>cyclic_task</name>
        <briefdescription>
<para>cyclic task occuring at the defined frequency and updating the pneumatic elements based on the mes received from the pneumatic_control.py </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="472" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="472" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a120e0042554a3750927df8a43d283feb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stack_prefault</definition>
        <argsstring>(void)</argsstring>
        <name>stack_prefault</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>standard in the user example </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="619" column="6" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="619" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
<para>main function to start the cyclic task and the socket </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" line="633" column="5" bodyfile="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c" bodystart="633" bodyend="753"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2007-2009<sp/><sp/>Florian<sp/>Pose,<sp/>Ingenieurgemeinschaft<sp/>IgH</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>IgH<sp/>EtherCAT<sp/>Master.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>IgH<sp/>EtherCAT<sp/>Master<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2,<sp/>as</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>IgH<sp/>EtherCAT<sp/>Master<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>General</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>IgH<sp/>EtherCAT<sp/>Master;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>---</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>license<sp/>mentioned<sp/>above<sp/>concerns<sp/>the<sp/>source<sp/>code<sp/>only.<sp/>Using<sp/>the</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>EtherCAT<sp/>technology<sp/>and<sp/>brand<sp/>is<sp/>only<sp/>permitted<sp/>in<sp/>compliance<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>industrial<sp/>property<sp/>and<sp/>similar<sp/>rights<sp/>of<sp/>Beckhoff<sp/>Automation<sp/>GmbH.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/resource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>clock_gettime()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>mlockall()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sched.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>sched_setscheduler()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//for<sp/>the<sp/>multi<sp/>process<sp/>with<sp/>socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/select.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ecrt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PERIOD_NS<sp/><sp/><sp/>(1000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SAFE_STACK<sp/>(8<sp/>*<sp/>1024)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NSEC_PER_SEC<sp/>(1000000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FREQUENCY<sp/>(NSEC_PER_SEC<sp/>/<sp/>PERIOD_NS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PORT<sp/>12345</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFER_SIZE<sp/>1024<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>server_fd,<sp/>client_fd=-1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>address;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addrlen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(address);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[BUFFER_SIZE]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EtherCAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_master_t<sp/>*master<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_master_state_t<sp/>master_state<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_domain_t<sp/>*domain1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_domain_state_t<sp/>domain1_state<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_slave_config_t<sp/>*sc_ana_in<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_slave_config_state_t<sp/>sc_ana_in_state<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>process<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>*domain1_pd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BusCouplerPos<sp/><sp/>0,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DigOutSlavePos<sp/>0,<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AnaOutSlavePos<sp/>0,<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AnaInSlavePos<sp/><sp/>0,<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Beckhoff_EK1100<sp/>0x00000002,<sp/>0x044c2c52</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Beckhoff_EL2024<sp/>0x00000002,<sp/>0x07e83052</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Beckhoff_EL4104<sp/>0x00000002,<sp/>0x10083052</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Beckhoff_EL3164<sp/>0x00000002,<sp/>0x0c5c3052</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>offsets<sp/>for<sp/>PDO<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_ana_in1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_ana_in2;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_ana_out1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_ana_out2;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_dig_out1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_pdo_entry_reg_t<sp/>domain1_regs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{AnaInSlavePos,<sp/><sp/>Beckhoff_EL3164,<sp/>0x6000,<sp/>0x11,<sp/>&amp;off_ana_in1},</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{AnaInSlavePos,<sp/><sp/>Beckhoff_EL3164,<sp/>0x6010,<sp/>0x11,<sp/>&amp;off_ana_in2},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{AnaOutSlavePos,<sp/>Beckhoff_EL4104,<sp/>0x7000,<sp/>0x01,<sp/>&amp;off_ana_out1},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{AnaOutSlavePos,<sp/>Beckhoff_EL4104,<sp/>0x7010,<sp/>0x01,<sp/>&amp;off_ana_out2},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{DigOutSlavePos,<sp/>Beckhoff_EL2024,<sp/>0x7000,<sp/>0x01,<sp/>&amp;off_dig_out1},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//ana1<sp/>+<sp/>dig1<sp/>=atomisation<sp/>with<sp/>0-6bar<sp/>vppm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//ana2<sp/>+<sp/>dig2<sp/>=<sp/>cartouche<sp/>with<sp/>0-2<sp/>bar<sp/>vppm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//dig3<sp/>=<sp/>pointeau<sp/>with<sp/>minimum<sp/>5.7<sp/>bar<sp/>and<sp/>is<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blink<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dig1=0;</highlight><highlight class="comment">//state<sp/>of<sp/>the<sp/>solenoid<sp/>valve<sp/>of<sp/>the<sp/>atomizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dig2=0;</highlight><highlight class="comment">//state<sp/>of<sp/>the<sp/>solenoid<sp/>valve<sp/>of<sp/>the<sp/>cartouche<sp/>(pressure<sp/>on<sp/>the<sp/>fluid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dig3=0;</highlight><highlight class="comment">//state<sp/>of<sp/>the<sp/>solenoid<sp/>valve<sp/>of<sp/>the<sp/>nozzle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ana1=0.0f;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ana2=0.0f;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state=<sp/>1;</highlight><highlight class="comment">//state<sp/>of<sp/>the<sp/>process<sp/>1:<sp/>on;<sp/>0:<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loop=<sp/>1;</highlight><highlight class="comment">//will<sp/>kepp<sp/>the<sp/>c<sp/>process<sp/>looping<sp/>until<sp/>turned<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[]<sp/>=</highlight><highlight class="stringliteral">&quot;10000000&quot;</highlight><highlight class="normal">;</highlight><highlight class="comment">//message<sp/>from<sp/>the<sp/>GUI<sp/>to<sp/>ethercat<sp/>bit<sp/>1:<sp/>on/off;<sp/>bit2,3:<sp/>dig<sp/>out;<sp/>bit4,5<sp/>and<sp/>6,7:<sp/>pressure<sp/>in<sp/>bar^-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Analog<sp/>in<sp/>--------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_pdo_entry_info_t<sp/>slave_3_pdo_entries[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x01,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Underrange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x02,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Overrange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x03,<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x05,<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x07,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x0000,<sp/>0x00,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Gap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x0000,<sp/>0x00,<sp/>5},<sp/></highlight><highlight class="comment">/*<sp/>Gap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x0e,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x0f,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>TxPDO<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x10,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>TxPDO<sp/>Toggle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6000,<sp/>0x11,<sp/>16},<sp/></highlight><highlight class="comment">/*<sp/>Value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x01,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Underrange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x02,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Overrange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x03,<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x05,<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x07,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x0000,<sp/>0x00,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Gap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x0000,<sp/>0x00,<sp/>5},<sp/></highlight><highlight class="comment">/*<sp/>Gap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x0e,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x0f,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>TxPDO<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x10,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>TxPDO<sp/>Toggle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6010,<sp/>0x11,<sp/>16},<sp/></highlight><highlight class="comment">/*<sp/>Value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x01,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Underrange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x02,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Overrange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x03,<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x05,<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x07,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x0000,<sp/>0x00,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Gap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x0000,<sp/>0x00,<sp/>5},<sp/></highlight><highlight class="comment">/*<sp/>Gap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x0e,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x0f,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>TxPDO<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x10,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>TxPDO<sp/>Toggle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6020,<sp/>0x11,<sp/>16},<sp/></highlight><highlight class="comment">/*<sp/>Value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x01,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Underrange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x02,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Overrange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x03,<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x05,<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x07,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x0000,<sp/>0x00,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Gap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x0000,<sp/>0x00,<sp/>5},<sp/></highlight><highlight class="comment">/*<sp/>Gap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x0e,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x0f,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>TxPDO<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x10,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>TxPDO<sp/>Toggle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x6030,<sp/>0x11,<sp/>16},<sp/></highlight><highlight class="comment">/*<sp/>Value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_pdo_info_t<sp/>slave_3_pdos[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1a00,<sp/>11,<sp/>slave_3_pdo_entries<sp/>+<sp/>0},<sp/></highlight><highlight class="comment">/*<sp/>AI<sp/>TxPDO-Map<sp/>Standard<sp/>Ch.1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1a02,<sp/>11,<sp/>slave_3_pdo_entries<sp/>+<sp/>11},<sp/></highlight><highlight class="comment">/*<sp/>AI<sp/>TxPDO-Map<sp/>Standard<sp/>Ch.2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1a04,<sp/>11,<sp/>slave_3_pdo_entries<sp/>+<sp/>22},<sp/></highlight><highlight class="comment">/*<sp/>AI<sp/>TxPDO-Map<sp/>Standard<sp/>Ch.3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1a06,<sp/>11,<sp/>slave_3_pdo_entries<sp/>+<sp/>33},<sp/></highlight><highlight class="comment">/*<sp/>AI<sp/>TxPDO-Map<sp/>Standard<sp/>Ch.4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_sync_info_t<sp/>slave_3_syncs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>EC_DIR_OUTPUT,<sp/>0,<sp/>NULL,<sp/>EC_WD_DISABLE},</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{1,<sp/>EC_DIR_INPUT,<sp/>0,<sp/>NULL,<sp/>EC_WD_DISABLE},</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{2,<sp/>EC_DIR_OUTPUT,<sp/>0,<sp/>NULL,<sp/>EC_WD_DISABLE},</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{3,<sp/>EC_DIR_INPUT,<sp/>4,<sp/>slave_3_pdos<sp/>+<sp/>0,<sp/>EC_WD_DISABLE},</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{0xff}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Analog<sp/>out<sp/>-------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_pdo_entry_info_t<sp/>slave_2_pdo_entries[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x7000,<sp/>0x01,<sp/>16},<sp/></highlight><highlight class="comment">/*<sp/>Analog<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x7010,<sp/>0x01,<sp/>16},<sp/></highlight><highlight class="comment">/*<sp/>Analog<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x7020,<sp/>0x01,<sp/>16},<sp/></highlight><highlight class="comment">/*<sp/>Analog<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x7030,<sp/>0x01,<sp/>16},<sp/></highlight><highlight class="comment">/*<sp/>Analog<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_pdo_info_t<sp/>slave_2_pdos[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1600,<sp/>1,<sp/>slave_2_pdo_entries<sp/>+<sp/>0},<sp/></highlight><highlight class="comment">/*<sp/>AO<sp/>RxPDO-Map<sp/>OutputsCh.1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1601,<sp/>1,<sp/>slave_2_pdo_entries<sp/>+<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>AO<sp/>RxPDO-Map<sp/>OutputsCh.2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1602,<sp/>1,<sp/>slave_2_pdo_entries<sp/>+<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>AO<sp/>RxPDO-Map<sp/>OutputsCh.3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1603,<sp/>1,<sp/>slave_2_pdo_entries<sp/>+<sp/>3},<sp/></highlight><highlight class="comment">/*<sp/>AO<sp/>RxPDO-Map<sp/>OutputsCh.4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_sync_info_t<sp/>slave_2_syncs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>EC_DIR_OUTPUT,<sp/>0,<sp/>NULL,<sp/>EC_WD_DISABLE},</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{1,<sp/>EC_DIR_INPUT,<sp/>0,<sp/>NULL,<sp/>EC_WD_DISABLE},</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{2,<sp/>EC_DIR_OUTPUT,<sp/>4,<sp/>slave_2_pdos<sp/>+<sp/>0,<sp/>EC_WD_DISABLE},</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{3,<sp/>EC_DIR_INPUT,<sp/>0,<sp/>NULL,<sp/>EC_WD_DISABLE},</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{0xff}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Digital<sp/>out<sp/>------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_pdo_entry_info_t<sp/>slave_1_pdo_entries[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x7000,<sp/>0x01,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x7010,<sp/>0x01,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x7020,<sp/>0x01,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x7030,<sp/>0x01,<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_pdo_info_t<sp/>slave_1_pdos[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1600,<sp/>1,<sp/>slave_1_pdo_entries<sp/>+<sp/>0},<sp/></highlight><highlight class="comment">/*<sp/>Channel<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1601,<sp/>1,<sp/>slave_1_pdo_entries<sp/>+<sp/>1},<sp/></highlight><highlight class="comment">/*<sp/>Channel<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1602,<sp/>1,<sp/>slave_1_pdo_entries<sp/>+<sp/>2},<sp/></highlight><highlight class="comment">/*<sp/>Channel<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{0x1603,<sp/>1,<sp/>slave_1_pdo_entries<sp/>+<sp/>3},<sp/></highlight><highlight class="comment">/*<sp/>Channel<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ec_sync_info_t<sp/>slave_1_syncs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>EC_DIR_OUTPUT,<sp/>4,<sp/>slave_1_pdos<sp/>+<sp/>0,<sp/>EC_WD_ENABLE},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{0xff}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decodeMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mes)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>state=mes[0]-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>dig1=mes[1]-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>dig2=mes[2]-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>dig3=mes[3]-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mes[4]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">!=0){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana1<sp/>=<sp/>(mes[4]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>*<sp/>10<sp/>+<sp/>(mes[5]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana1<sp/>=<sp/>5361.58f*(ana1/10)+1536.84f;</highlight><highlight class="comment">//on<sp/>the<sp/>0-6<sp/>bar<sp/>vppm<sp/><sp/>using<sp/>only<sp/>0-2<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mes[5]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">!=0){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana1<sp/>=<sp/>(mes[5]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana1<sp/>=<sp/>5361.58f*(ana1/10)+1536.84f;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana1=0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mes[6]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">!=0){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana2<sp/>=<sp/>(mes[6]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>*<sp/>10<sp/>+<sp/>(mes[7]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana2<sp/>=<sp/>16383.75f*(ana2/10)+4914.625f;</highlight><highlight class="comment">//on<sp/>the<sp/>0-2<sp/>bar<sp/>VPPM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mes[7]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">!=0){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana2<sp/>=<sp/>(mes[7]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana2<sp/>=<sp/>16383.75f*(ana2/10)+4914.625f;</highlight><highlight class="comment">//on<sp/>the<sp/>0-2<sp/>bar<sp/>VPPM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ana2=0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_nonblocking(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/>fcntl(fd,<sp/>F_GETFL,<sp/>0);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;fcntl(F_GETFL)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fcntl(fd,<sp/>F_SETFL,<sp/>flags<sp/>|<sp/>O_NONBLOCK)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;fcntl(F_SETFL)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>start_socket()<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>socket<sp/>file<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((server_fd<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;socket<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>socket<sp/>options<sp/>to<sp/>allow<sp/>reuse<sp/>of<sp/>the<sp/>same<sp/>dosn<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt(server_fd,<sp/>SOL_SOCKET,<sp/>SO_REUSEADDR<sp/>|<sp/>SO_REUSEPORT,<sp/>&amp;opt,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(opt)))<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;setsockopt<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(server_fd);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bind<sp/>the<sp/>socket<sp/>to<sp/>the<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>address.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>address.sin_addr.s_addr<sp/>=<sp/>INADDR_ANY;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>address.sin_port<sp/>=<sp/>htons(PORT);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(server_fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;address,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(address))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;bind<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(server_fd);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Listen<sp/>for<sp/>incoming<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen(server_fd,<sp/>3)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;listen&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(server_fd);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>server<sp/>socket<sp/>to<sp/>non-blocking<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>set_nonblocking(server_fd);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close_socket()<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_fd<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(client_fd);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>close(server_fd);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>listen_to_socket()<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_fd<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>client<sp/>connection<sp/>yet,<sp/>try<sp/>to<sp/>accept<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client_fd<sp/>=<sp/>accept(server_fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;address,<sp/>(socklen_t*)&amp;addrlen);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_fd<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>!=<sp/>EWOULDBLOCK)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;accept&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client_fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Client<sp/>connected\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_nonblocking(client_fd);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Client<sp/>connected,<sp/>listen<sp/>for<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd_set<sp/>read_fds;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>timeout;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ZERO(&amp;read_fds);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET(client_fd,<sp/>&amp;read_fds);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout.tv_usec<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>wait</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>activity<sp/>=<sp/>select(client_fd<sp/>+<sp/>1,<sp/>&amp;read_fds,<sp/>NULL,<sp/>NULL,<sp/>&amp;timeout);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activity<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activity<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>FD_ISSET(client_fd,<sp/>&amp;read_fds))<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>data<sp/>from<sp/>the<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read<sp/>=<sp/>read(client_fd,<sp/>buffer,<sp/>8);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[bytes_read]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Null-terminate<sp/>the<sp/>received<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(message,<sp/>buffer);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(buffer,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight><highlight class="comment">//trying<sp/>to<sp/>empty<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Client<sp/>disconnected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Client<sp/>disconnected\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(client_fd);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client_fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_domain1_state(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>ec_domain_state_t<sp/>ds;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>ecrt_domain_state(domain1,<sp/>&amp;ds);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>domain1_state<sp/>=<sp/>ds;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_master_state(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>ec_master_state_t<sp/>ms;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>ecrt_master_state(master,<sp/>&amp;ms);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>master_state<sp/>=<sp/>ms;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_slave_config_states(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>ec_slave_config_state_t<sp/>s;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>ecrt_slave_config_state(sc_ana_in,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>sc_ana_in_state<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cyclic_task()</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//local<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>current_ana1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>current_ana2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_dig<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_dig1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_dig2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int8_t<sp/>current_dig3=0;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dig_flag=0;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>receive<sp/>process<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ecrt_master_receive(master);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>ecrt_domain_process(domain1);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>process<sp/>data<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>check_domain1_state();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>listen_to_socket();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>updates<sp/>from<sp/>the<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeMessage(message);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>the<sp/>state<sp/>if<sp/>0<sp/>to<sp/>kill<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!state){</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//turn<sp/>everything<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//digital<sp/>write<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EC_WRITE_U8(domain1_pd<sp/>+<sp/>off_dig_out1,<sp/>0x00);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//analog<sp/>write<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EC_WRITE_U16(domain1_pd<sp/>+<sp/>off_ana_out1,<sp/>0);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EC_WRITE_U16(domain1_pd<sp/>+<sp/>off_ana_out2,<sp/>0);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop=0;</highlight><highlight class="comment">//will<sp/>add<sp/>a<sp/>flag<sp/>here<sp/>to<sp/>terminate<sp/>the<sp/>while<sp/>loop<sp/>in<sp/>the<sp/>main<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>current<sp/>value<sp/>at<sp/>the<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_ana1<sp/>=<sp/>EC_READ_U16(domain1_pd<sp/>+<sp/>off_ana_out1);</highlight><highlight class="comment">//ato</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_ana2<sp/>=<sp/>EC_READ_U16(domain1_pd<sp/>+<sp/>off_ana_out2);</highlight><highlight class="comment">//cart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig<sp/>=<sp/>EC_READ_U8(domain1_pd<sp/>+<sp/>off_dig_out1);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig1<sp/>=<sp/>(current_dig&amp;(1&lt;&lt;0));</highlight><highlight class="comment">//ato<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig2<sp/>=<sp/>(current_dig&amp;(1&lt;&lt;1))/2;</highlight><highlight class="comment">//cart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig3<sp/>=<sp/>(current_dig&amp;(1&lt;&lt;2))/4;</highlight><highlight class="comment">//pointeau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>with<sp/>the<sp/>new<sp/>value<sp/>and<sp/>update<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//analogue<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//atomisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_ana1<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ana1)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EC_WRITE_U16(domain1_pd<sp/>+<sp/>off_ana_out1,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ana1);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cartouche</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_ana2<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ana2)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EC_WRITE_U16(domain1_pd<sp/>+<sp/>off_ana_out2,<sp/>ana2);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//digital<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cartouche</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_dig1<sp/>!=<sp/>dig1)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dig1){</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig=current_dig<sp/>|<sp/>0x01;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig=current_dig<sp/>^<sp/>0x01;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dig_flag=1;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//atomisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_dig2<sp/>!=<sp/>dig2)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dig2){</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig=current_dig<sp/>|<sp/>0x02;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig=current_dig<sp/>^<sp/>0x02;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dig_flag=1;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pointeau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_dig3<sp/>!=<sp/>dig3)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dig3){</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig=current_dig<sp/>|<sp/>0x04;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_dig=current_dig<sp/>^<sp/>0x04;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dig_flag=1;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>at<sp/>least<sp/>one<sp/>digital<sp/>value<sp/>was<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dig_flag)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EC_WRITE_U8(domain1_pd<sp/>+<sp/>off_dig_out1,<sp/>current_dig);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter--;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>FREQUENCY;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>new<sp/>process<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blink<sp/>=<sp/>!blink;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>sent<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>check_ana1<sp/>=<sp/>EC_READ_U16(domain1_pd<sp/>+<sp/>off_ana_out1);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>check_ana2<sp/>=<sp/>EC_READ_U16(domain1_pd<sp/>+<sp/>off_ana_out2);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>check_dig1<sp/>=<sp/>EC_READ_U8(domain1_pd<sp/>+<sp/>off_dig_out1);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Analog<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>ana_in_value1<sp/>=<sp/>EC_READ_U16(domain1_pd<sp/>+<sp/>off_ana_in1);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>ana_in_value2<sp/>=<sp/>EC_READ_U16(domain1_pd<sp/>+<sp/>off_ana_in2);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>master<sp/>state<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_master_state();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>slave<sp/>configuration<sp/>state(s)<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_slave_config_states();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>process<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>ecrt_domain_queue(domain1);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>ecrt_master_send(master);</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stack_prefault(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dummy[MAX_SAFE_STACK];</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(dummy,<sp/>0,<sp/>MAX_SAFE_STACK);</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>ec_slave_config_t<sp/>*sc;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>wakeup_time;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>master<sp/>=<sp/>ecrt_request_master(0);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!master)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>domain1<sp/>=<sp/>ecrt_master_create_domain(master);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!domain1)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(sc_ana_in<sp/>=<sp/>ecrt_master_slave_config(</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>master,<sp/>AnaInSlavePos,<sp/>Beckhoff_EL3164)))<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>slave<sp/>configuration.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>PDOs...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ecrt_slave_config_pdos(sc_ana_in,<sp/>EC_END,<sp/>slave_3_syncs))<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>PDOs.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(sc<sp/>=<sp/>ecrt_master_slave_config(</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>master,<sp/>AnaOutSlavePos,<sp/>Beckhoff_EL4104)))<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>slave<sp/>configuration.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ecrt_slave_config_pdos(sc,<sp/>EC_END,<sp/>slave_2_syncs))<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>PDOs.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(sc<sp/>=<sp/>ecrt_master_slave_config(</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>master,<sp/>DigOutSlavePos,<sp/>Beckhoff_EL2024)))<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>slave<sp/>configuration.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ecrt_slave_config_pdos(sc,<sp/>EC_END,<sp/>slave_1_syncs))<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>PDOs.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>configuration<sp/>for<sp/>bus<sp/>coupler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>sc<sp/>=<sp/>ecrt_master_slave_config(master,<sp/>BusCouplerPos,<sp/>Beckhoff_EK1100);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sc)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ecrt_domain_reg_pdo_entry_list(domain1,<sp/>domain1_regs))<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;PDO<sp/>entry<sp/>registration<sp/>failed!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Activating<sp/>master...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ecrt_master_activate(master))<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(domain1_pd<sp/>=<sp/>ecrt_domain_data(domain1)))<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sched_param<sp/>param<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>param.sched_priority<sp/>=<sp/>sched_get_priority_max(SCHED_FIFO);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Using<sp/>priority<sp/>%i.&quot;</highlight><highlight class="normal">,<sp/>param.sched_priority);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sched_setscheduler(0,<sp/>SCHED_FIFO,<sp/>&amp;param)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;sched_setscheduler<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mlockall(MCL_CURRENT<sp/>|<sp/>MCL_FUTURE)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>Failed<sp/>to<sp/>lock<sp/>memory:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(errno));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>stack_prefault();</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Starting<sp/>RT<sp/>task<sp/>with<sp/>dt=%u<sp/>ns.\n&quot;</highlight><highlight class="normal">,<sp/>PERIOD_NS);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_gettime(CLOCK_MONOTONIC,<sp/>&amp;wakeup_time);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>wakeup_time.tv_sec<sp/>+=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>start<sp/>in<sp/>future<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>wakeup_time.tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//socket<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>start_socket();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(loop)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>clock_nanosleep(CLOCK_MONOTONIC,<sp/>TIMER_ABSTIME,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wakeup_time,<sp/>NULL);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;clock_nanosleep():<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror(ret));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyclic_task();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wakeup_time.tv_nsec<sp/>+=<sp/>PERIOD_NS;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(wakeup_time.tv_nsec<sp/>&gt;=<sp/>NSEC_PER_SEC)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wakeup_time.tv_nsec<sp/>-=<sp/>NSEC_PER_SEC;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wakeup_time.tv_sec++;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>close_socket();</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;killing<sp/>c<sp/>process&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/hugoa/OneDrive/Bureau/AMABA/Automatisation/amaba/amaba/main.c"/>
  </compounddef>
</doxygen>
